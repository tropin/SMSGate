//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Csharper.SenderService.ClientSiteCallback {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClientSiteCallback.IGatewayCallback")]
    public interface IGatewayCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGatewayCallback/NotifyDelivered", ReplyAction="http://tempuri.org/IGatewayCallback/NotifyDeliveredResponse")]
        bool NotifyDelivered(System.Guid smsId, string clientId, string distibutionId, System.Collections.Generic.Dictionary<string, string> additionalParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGatewayCallback/NotifyFailed", ReplyAction="http://tempuri.org/IGatewayCallback/NotifyFailedResponse")]
        bool NotifyFailed(System.Guid smsId, string clientId, string distibutionId, System.Collections.Generic.Dictionary<string, string> additionalParams);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGatewayCallbackChannel : Csharper.SenderService.ClientSiteCallback.IGatewayCallback, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GatewayCallbackClient : System.ServiceModel.ClientBase<Csharper.SenderService.ClientSiteCallback.IGatewayCallback>, Csharper.SenderService.ClientSiteCallback.IGatewayCallback {
        
        public GatewayCallbackClient() {
        }
        
        public GatewayCallbackClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GatewayCallbackClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GatewayCallbackClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GatewayCallbackClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool NotifyDelivered(System.Guid smsId, string clientId, string distibutionId, System.Collections.Generic.Dictionary<string, string> additionalParams) {
            return base.Channel.NotifyDelivered(smsId, clientId, distibutionId, additionalParams);
        }
        
        public bool NotifyFailed(System.Guid smsId, string clientId, string distibutionId, System.Collections.Generic.Dictionary<string, string> additionalParams) {
            return base.Channel.NotifyFailed(smsId, clientId, distibutionId, additionalParams);
        }
    }
}
